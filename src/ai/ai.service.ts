import { Injectable } from '@nestjs/common';
import { Configuration, OpenAIApi } from 'openai';
import { ConfigService } from '@nestjs/config';

@Injectable()
export class AiService {
  private openai: OpenAIApi;

  constructor(private config: ConfigService) {
    const configuration = new Configuration({
      apiKey: this.config.get<string>('OPENAI_API_KEY'),
    });

    this.openai = new OpenAIApi(configuration);
  }

  async generateGuidance(numberOfDay: number, cheminDeVie: string, ): Promise<string> {
    const prompt = `Tu es un guide spirituel moderne, bienveillant et inspir√©.  
    Tu accompagnes chaque jour l‚Äôutilisateur avec douceur et clart√©.

    Aujourd‚Äôhui, l‚Äôutilisateur est sous l‚Äôinfluence du **nombre personnel du jour : ${numberOfDay}**  
    et son **chemin de vie est ${cheminDeVie}**, ce qui t‚Äô√©claire sur sa mission profonde.

    Ta mission est double :

    ---

    1. ‚ú® **Commence par une guidance courte**, compos√©e de 1 √† 3 phrases.  
    Elle doit proposer une intention ou un √©tat d‚Äôesprit utile pour la journ√©e.  
    Utilise un ton **doux, clair, fluide et l√©g√®rement po√©tique**. Tu peux faire appel √† des images simples (lumi√®re, souffle, eau, marche, silence...).  
    N‚Äôutilise pas de termes techniques ou spirituels complexes.

    2. üéØ **Ensuite, propose un seul d√©fi concret √† r√©aliser aujourd‚Äôhui.**  
    Ce d√©fi doit √™tre **simple, faisable en quelques minutes**, et align√© avec la vibration du jour.  
    Il peut s‚Äôagir d‚Äôun geste, d‚Äôun exercice, d‚Äôune r√©flexion ou d‚Äôune mini-action bienveillante.  
    √âvite les formulations vagues ou g√©n√©riques.

    ---

    **Exemples de structure attendue :**

    üß≠ *Guidance :*  
    > ¬´ Aujourd‚Äôhui, prends le temps de t‚Äô√©couter sans te juger. Le silence int√©rieur √©claire parfois plus que les r√©ponses. ¬ª

    üéØ *D√©fi :*  
    > Note dans un carnet trois choses que tu ressens en ce moment, sans chercher √† les expliquer.

    ---

    Maintenant, propose la guidance et le d√©fi du jour :`;

    const response = await this.openai.createChatCompletion({
      model: 'gpt-3.5-turbo',
      messages: [
        {
          role: 'system',
          content: 'Tu es un guide spirituel bienveillant, intuitif et po√©tique.',
        },
        {
          role: 'user',
          content: prompt,
        },
      ],
      temperature: 0.9,
      max_tokens: 300,
    });

    return response.data.choices[0].message?.content ?? 'Pas de r√©ponse.';
  }

  async generateGuidanceFromPrompt(prompt: string): Promise<string> {
    const response = await this.openai.createChatCompletion({
      model: 'gpt-3.5-turbo',
      messages: [
        { role: 'system', content: 'Tu es un guide spirituel bienveillant, intuitif et po√©tique.' },
        { role: 'user', content: prompt },
      ],
      temperature: 0.85,
      max_tokens: 350,
    });
  
    return response.data.choices[0].message?.content ?? 'R√©ponse manquante.';
  }

  async generateFromMessages(messages: any[]) {
    const cleanedMessages = messages.filter(
      (m) => m && typeof m.content === 'string' && m.content.trim() !== ''
    );

    
    const response = await this.openai.createChatCompletion({
      model: 'gpt-4',
      messages: cleanedMessages,
      temperature: 0.7,
    });
    
  
    return response.data.choices[0].message?.content?.trim() ?? '';
  }
  
  
}
